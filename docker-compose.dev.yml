version: '3.8'

services:
  redis:
    image: redis:alpine
    container_name: redis-dev
    ports:
      - '6379:6379'
    restart: unless-stopped
    healthcheck:
      test: ['CMD', 'redis-cli', 'ping']
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    networks:
      - app-network

  api:
    build:
      context: .
      dockerfile: apps/api/Dockerfile.api
    dns:
      - 8.8.8.8
      - 8.8.4.4 # Added fallback DNS
    ports:
      - '3001:3001'
    volumes:
      # Mount source code for hot reloading
      - ./apps/api:/app/apps/api
      - ./packages:/app/packages
      - ./turbo.json:/app/turbo.json
      - ./package.json:/app/package.json
      # Use a named volume to preserve node_modules
      - api_node_modules:/app/node_modules
    env_file:
      - .env
    environment:
      - NODE_ENV=development
    command: pnpm dev --filter=api
    stdin_open: true
    tty: true
    depends_on:
      redis:
        condition: service_healthy
    healthcheck:
      test: ['CMD', 'curl', '-f', 'http://localhost:3001/health']
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    restart: unless-stopped
    networks:
      - app-network

  web:
    build:
      context: .
      dockerfile: apps/web/Dockerfile.web
    ports:
      - '3000:3000'
    volumes:
      # Mount source code for hot reloading
      - ./apps/web:/app/apps/web
      - ./packages:/app/packages
      - ./turbo.json:/app/turbo.json
      - ./package.json:/app/package.json
      # Prevent node_modules from being overwritten by local mounts
      - /app/node_modules
      - /app/apps/web/node_modules
    env_file:
      - .env
    environment:
      - NODE_ENV=development
      # Add explicit container references
      - API_URL=http://api:3001
      - REDIS_URL=redis://redis:6379
    command: pnpm dev --filter=web
    stdin_open: true
    tty: true
    depends_on:
      api:
        condition: service_healthy
    healthcheck:
      test: ['CMD', 'curl', '-f', 'http://localhost:3000/api/health']
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    restart: unless-stopped
    networks:
      - app-network

volumes:
  node_modules:
  web_node_modules:
  api_node_modules:
  packages_node_modules:

networks:
  app-network:
    driver: bridge
